apply plugin: 'application'

def osName = System.getProperty('os.name').toLowerCase(Locale.ROOT)

sourceSets.main.resources.srcDirs += [ rootProject.file('assets').path ]
mainClassName = 'com.amhsrobotics.pathsim.PathFollowingSim'
sourceCompatibility = 8.0

import org.gradle.internal.os.OperatingSystem

run {
    workingDir = rootProject.file('assets').path
    setIgnoreExitValue(true)
}

sourceSets {
    main {
        resources {
            srcDirs "assets"
        }
    }
}

rootProject.tasks.named("processResources") {
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
}

jar {
// sets the name of the .jar file this produces to the name of the game or app.
    archiveBaseName.set("TKO Path Sim")
// the duplicatesStrategy will matter starting in Gradle 7.0; this setting works.
    duplicatesStrategy(DuplicatesStrategy.EXCLUDE)
    dependsOn configurations.runtimeClasspath
    from { configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
// these "exclude" lines remove some unnecessary duplicate files in the output JAR.
    exclude('META-INF/INDEX.LIST', 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA')
    dependencies {
        exclude('META-INF/INDEX.LIST', 'META-INF/maven/**')
    }
// setting the manifest makes the JAR runnable.
    manifest {
        attributes 'Main-Class': project.mainClassName
    }

// this last step may help on some OSes that need extra instruction to make runnable JARs.
    doLast {
        file(archiveFile).setExecutable(true, false)
    }
}
